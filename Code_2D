#ggsignif does nto show up unless axis limits changed

library(dplyr)

# Compute the percentage of public junctions per donorVisit and chain
CD4merge_public_per_donor <- CD4merge %>%
    group_by(donorVisit, chain) %>%
    summarise(public_junction_count = sum(sharing == "public"),  # Count public junctions
              total_junctions = n(),  # Count total junctions (public + private)
              chainSpecificPercentPublic = (public_junction_count / total_junctions) * 100,  # Compute percentage
              .groups = "drop")

# View the results
head(CD4merge_public_per_donor)
# Merge chain-specific public percentages into indices_combinedByChain
indices_combinedByChain <- indices_combined %>%
    left_join(CD4merge_public_per_donor, by = c("donorVisit", "chain"))

# Check the updated dataset
head(indices_combinedByChain)


library(ggplot2)
library(ggsignif)

# Customizable components
violin_fill_color <- "dark grey"
violin_outline_color <- "black"
pointrange_color <- "red"
significance_line_color <- "black"
plot_title <- "Percentage of Cells with Public TCRS by NHS Scale\n"
x_axis_label <- "\nDisease State"
y_axis_label <- "Percent of Public TCRs (%)\n"
caption_text <- "Welch's t-test"
angle_x_axis_text <- 45
x_axis_text_hjust <- 1
x_axis_text_vjust <- 1

# Plot code
p <- ggplot(data = subset(indices_combinedByChain, !is.na(NHC_Scalefactor) & NHC_Scalefactor != "Conv"), aes(x = NHC_Scalefactor, y = chainSpecificPercentPublic))+facet_wrap(~chain) +
    geom_violin(trim = FALSE, fill = violin_fill_color, color = violin_outline_color, alpha = 0.7) +  # Violin colors
    labs(title = plot_title, y = y_axis_label, x = x_axis_label) +  # Plot title and axis labels
    stat_summary(fun.data = "mean_cl_boot", geom = "pointrange", colour = pointrange_color, size = 1.8) +  # Dots color
    geom_signif(comparisons = list(c("Healthy", "Mild"), c("Healthy", "Moderate"), c("Healthy", "Severe")), 
                map_signif_level = TRUE, test = "t.test", step_increase = 0.1, color = significance_line_color, size = 1)  +  # Significance line
    scale_y_continuous(limits = c(0, 60), breaks = c(0, 25, 50)) +  # Y-axis limits from 0 to 60 with notches at 0, 25, and 50
    labs(caption = caption_text) +  # Caption text
    theme(axis.text.x = element_text(angle = angle_x_axis_text, vjust = x_axis_text_vjust, hjust = x_axis_text_hjust),  # X-axis text angle
          plot.title = element_text(hjust = 0.5),  # Center the title
          legend.position = "none")  # Remove the redundant legend

# Save the plot as a square image (10x10 inches)
ggsave("square_plot.png", plot = p, width = 17, height = 17, units = "in", dpi = 300)






## BH-adjusted p-value sentence  -------------------------------
cat(
    paste(
        sapply(
            c("TRA","TRB"),                                  # run for both chains
            function(ch) {
                dat <- subset(indices_combinedByChain,
                              chain == ch &
                                  NHC_Scalefactor %in% c("Healthy","Mild","Moderate","Severe"))
                
                pairs <- list(c("Healthy","Mild"),
                              c("Healthy","Moderate"),
                              c("Healthy","Severe"))
                
                raw_p <- sapply(pairs, function(pr) {
                    if (all(pr %in% dat$NHC_Scalefactor)) {
                        t.test(dat$chainSpecificPercentPublic[dat$NHC_Scalefactor == pr[1]],
                               dat$chainSpecificPercentPublic[dat$NHC_Scalefactor == pr[2]])$p.value
                    } else NA                                          # handle missing groups
                })
                
                adj_p <- p.adjust(raw_p, method = "BH")              # BH adjustment
                
                sprintf("%s: Healthy vs Mild: p = %.3g, Healthy vs Moderate: p = %.3g, Healthy vs Severe: p = %.3g",
                        ch, adj_p[1], adj_p[2], adj_p[3])
            }
        ),
        collapse = "; "
    )
)
## -------------------------------------------------------------
